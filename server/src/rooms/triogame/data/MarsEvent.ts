import _ from "lodash";
import { EventCardData, TrioGameType } from "@port-of-mars/shared/triogame/types";
import { TrioMarsEventCard } from "@port-of-mars/server/entity/TrioMarsEventCard"; //FIXME: need to pull from saachi's fork
import { getLogger } from "@port-of-mars/server/settings";

const logger = getLogger(__filename);

export type EventDeckItem = { event: EventCardData; numberOfCopies: number };

// Reanme id similar to multiplayer ver for card definition or keep in mind for the db?
// make different const of event cards based on gametype
const _freeplayEvents: Array<TrioMarsEventCard> = [
  //TODO: make card definition based from the yml file
  {
    id: 1,
    codeName: "lifeAsUsual",
    displayName: "Life As Usual",
    flavorText: 'As the first human outpost on Mars, having a "usual" day is pretty unusual.',
    effect: "No special effect.",
    drawMin: 10,
    drawMax: 20,
    rollMax: 0,
    systemHealthMultiplier: 0,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 2,
    codeName: "murphysLaw",
    displayName: "Murphy's Law",
    flavorText: 'Residents at Port of Mars know better than to ask, "what ELSE could go wrong?"',
    effect: "Reveal 2 more events for this round.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 0,
    rollMax: 0,
    systemHealthMultiplier: 0,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 3,
    codeName: "lostTime",
    displayName: "Lost Time",
    flavorText: "Time flies when you're trying to stay alive.",
    effect: "Lose {roll} resource{s} for this round.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 1,
    rollMax: 8,
    systemHealthMultiplier: 0,
    pointsMultiplier: 0,
    resourcesMultiplier: -1,
  },
  {
    id: 4,
    codeName: "richDeposit",
    displayName: "Rich Deposit",
    flavorText: "A stroke of luck in an otherwise unlucky day.",
    effect: "Gain {roll} resource{s} for this round.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 1,
    rollMax: 8,
    systemHealthMultiplier: 0,
    pointsMultiplier: 0,
    resourcesMultiplier: 1,
  },
  {
    id: 5,
    codeName: "urgentRepairs",
    displayName: "Urgent Repairs",
    flavorText: "No pneumatic tires on mars, but there are always holes to patch.",
    effect: "{roll} resource{s} are immediately diverted to system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 2,
    rollMax: 7,
    systemHealthMultiplier: 1,
    pointsMultiplier: 0,
    resourcesMultiplier: -1,
  },
  {
    id: 6,
    codeName: "hullBreach",
    displayName: "Hull Breach",
    flavorText:
      "Accidents happen. It's unavoidable. Our job is to do our best to avoid them all the same.",
    effect: "Lose {roll} system health.",
    drawMin: 4,
    drawMax: 4,
    rollMin: 1,
    rollMax: 10,
    systemHealthMultiplier: -1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 7,
    codeName: "softwareUpgrade",
    displayName: "Software Upgrade",
    flavorText: "A much needed patch to the system comes online.",
    effect: "Gain {roll} system health.",
    drawMin: 4,
    drawMax: 4,
    rollMin: 1,
    rollMax: 10,
    systemHealthMultiplier: 1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 8,
    codeName: "lostCargo",
    displayName: "Lost Cargo",
    flavorText: "Precious cargo, now forever Martian property.",
    effect: "Lose {roll} point{s}.",
    drawMin: 4,
    drawMax: 4,
    rollMin: 1,
    rollMax: 10,
    systemHealthMultiplier: 0,
    pointsMultiplier: -1,
    resourcesMultiplier: 0,
  },
  {
    id: 9,
    codeName: "hitTheMotherlode",
    displayName: "Hit the Motherlode",
    flavorText: "A valuable find. Fortunately for us, not that useful for repairs.",
    effect: "Gain {roll} point{s}.",
    drawMin: 4,
    drawMax: 4,
    rollMin: 1,
    rollMax: 10,
    systemHealthMultiplier: 0,
    pointsMultiplier: 1,
    resourcesMultiplier: 0,
  },
];

// find an easier way to refactor cards that invest, reduce, or increase x points?
const _prolificEvents: Array<TrioMarsEventCard> = [
  {
    id: 10,
    codeName: "increaseSystemHealth7",
    displayName: "",
    flavorText: "",
    effect: "Gain 7 system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 7,
    rollMax: 7,
    systemHealthMultiplier: 1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 11,
    codeName: "reduceSystemHealth6",
    displayName: "",
    flavorText: "",
    effect: "Lose 6 system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 6,
    rollMax: 6,
    systemHealthMultiplier: -1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 12,
    codeName: "lifeAsUsual",
    displayName: "",
    flavorText: "",
    effect: "Life as usual, nothing happens.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 0,
    rollMax: 0,
    systemHealthMultiplier: 0,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 13,
    codeName: "increasePoints5",
    displayName: "",
    flavorText: "",
    effect: "Gain 5 points.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 5,
    rollMax: 5,
    systemHealthMultiplier: 0,
    pointsMultiplier: 1,
    resourcesMultiplier: 0,
  },
  {
    id: 14,
    codeName: "reduceSystemHealth5",
    displayName: "",
    flavorText: "",
    effect: "Lose 5 system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 5,
    rollMax: 5,
    systemHealthMultiplier: -1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 15,
    codeName: "increasePoints4",
    displayName: "",
    flavorText: "",
    effect: "Gain 4 points.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 4,
    rollMax: 4,
    systemHealthMultiplier: 0,
    pointsMultiplier: 1,
    resourcesMultiplier: 0,
  },
  {
    id: 16,
    codeName: "increasePoints2",
    displayName: "",
    flavorText: "",
    effect: "Gain 2 points.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 2,
    rollMax: 2,
    systemHealthMultiplier: 0,
    pointsMultiplier: 1,
    resourcesMultiplier: 0,
  },
  {
    id: 17,
    codeName: "reducePoints4",
    displayName: "",
    flavorText: "",
    effect: "Lose 4 points.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 4,
    rollMax: 4,
    systemHealthMultiplier: 0,
    pointsMultiplier: -1,
    resourcesMultiplier: 0,
  },
  {
    id: 18,
    codeName: "murphysLaw",
    displayName: "",
    flavorText: "",
    effect: "Reveal 2 more events for this round.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 0,
    rollMax: 0,
    systemHealthMultiplier: 0,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 19,
    codeName: "reduceResources6",
    displayName: "",
    flavorText: "",
    effect: "Lose 6 resources.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 6,
    rollMax: 6,
    systemHealthMultiplier: 0,
    pointsMultiplier: 0,
    resourcesMultiplier: -1,
  },
  {
    id: 20,
    codeName: "reduceSystemHealth1",
    displayName: "",
    flavorText: "",
    effect: "Lose 1 system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 1,
    rollMax: 1,
    systemHealthMultiplier: -1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 21,
    codeName: "reducePoints1",
    displayName: "",
    flavorText: "",
    effect: "Lose 1 point.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 1,
    rollMax: 1,
    systemHealthMultiplier: 0,
    pointsMultiplier: -1,
    resourcesMultiplier: 0,
  },
  {
    id: 22,
    codeName: "investSystemHealth8",
    displayName: "",
    flavorText: "",
    effect: "8 resources are immediately diverted to system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 8,
    rollMax: 8,
    systemHealthMultiplier: 1,
    pointsMultiplier: 0,
    resourcesMultiplier: -1,
  },
  {
    id: 23,
    codeName: "increasePoints9",
    displayName: "",
    flavorText: "",
    effect: "Gain 9 points.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 9,
    rollMax: 9,
    systemHealthMultiplier: 0,
    pointsMultiplier: 1,
    resourcesMultiplier: 0,
  },
  {
    id: 24,
    codeName: "reduceSystemHealth8",
    displayName: "",
    flavorText: "",
    effect: "Lose 8 system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 8,
    rollMax: 8,
    systemHealthMultiplier: -1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 25,
    codeName: "increaseSystemHealth3",
    displayName: "",
    flavorText: "",
    effect: "Gain 3 system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 3,
    rollMax: 3,
    systemHealthMultiplier: 1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 26,
    codeName: "reducePoints5",
    displayName: "",
    flavorText: "",
    effect: "Lose 5 points.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 5,
    rollMax: 5,
    systemHealthMultiplier: 0,
    pointsMultiplier: -1,
    resourcesMultiplier: 0,
  },
  {
    id: 27,
    codeName: "increaseSystemHealth6",
    displayName: "",
    flavorText: "",
    effect: "Gain 6 system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 6,
    rollMax: 6,
    systemHealthMultiplier: 1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 28,
    codeName: "increaseResources2",
    displayName: "",
    flavorText: "",
    effect: "Gain 2 resources.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 2,
    rollMax: 2,
    systemHealthMultiplier: 0,
    pointsMultiplier: 0,
    resourcesMultiplier: 1,
  },
  {
    id: 29,
    codeName: "increaseSystemHealth4",
    displayName: "",
    flavorText: "",
    effect: "Gain 4 system health.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 4,
    rollMax: 4,
    systemHealthMultiplier: 1,
    pointsMultiplier: 0,
    resourcesMultiplier: 0,
  },
  {
    id: 30,
    codeName: "reducePoints10",
    displayName: "",
    flavorText: "",
    effect: "Lose 10 points.",
    drawMin: 1,
    drawMax: 1,
    rollMin: 10,
    rollMax: 10,
    systemHealthMultiplier: 0,
    pointsMultiplier: -1,
    resourcesMultiplier: 0,
  },
];

export function getMarsEventDeck(gameType: TrioGameType): Array<EventDeckItem> {
  const availableEventCards: Record<
    TrioGameType,
    { availableEvents: Array<[string, number]>; deckset: Array<TrioMarsEventCard> }
  > = {
    freeplay: {
      availableEvents: [
        ["lifeAsUsual", 1],
        ["murphysLaw", 1],
        ["lostTime", 1],
        ["richDeposit", 1],
        ["urgentRepairs", 1],
        ["hullBreach", 1],
        ["softwareUpgrade", 1],
        ["lostCargo", 1],
        ["hitTheMotherlode", 1],
      ],
      deckset: _freeplayEvents,
    },
    prolificVariable: {
      availableEvents: [
        ["increaseSystemHealth7", 1],
        ["reduceSystemHealth6", 1],
        ["lifeAsUsual", 10],
        ["increasePoints5", 1],
        ["reduceSystemHealth5", 1],
        ["increasePoints4", 1],
        ["increasePoints2", 1],
        ["reducePoints4", 1],
        ["murphysLaw", 1],
        ["reduceResources6", 1],
        ["reduceSystemHealth1", 1],
        ["reducePoints1", 1],
        ["investSystemHealth8", 1],
        ["increasePoints9", 1],
        ["reduceSystemHealth8", 1],
        ["increaseSystemHealth3", 1],
        ["reducePoints5", 1],
        ["increaseSystemHealth6", 1],
        ["increaseResources2", 1],
        ["increaseSystemHealth4", 1],
        ["reducePoints10", 1],
      ],
      deckset: _prolificEvents,
    },
    prolificBaseline: {
      //TODO: adjust if there's baseline has different available cards than variable
      availableEvents: [
        ["increaseSystemHealth7", 1],
        ["reduceSystemHealth6", 1],
        ["lifeAsUsual", 10],
        ["increasePoints5", 1],
        ["reduceSystemHealth5", 1],
        ["increasePoints4", 1],
        ["increasePoints2", 1],
        ["reducePoints4", 1],
        ["murphysLaw", 1],
        ["reduceResources6", 1],
        ["reduceSystemHealth1", 1],
        ["reducePoints1", 1],
        ["investSystemHealth8", 1],
        ["increasePoints9", 1],
        ["reduceSystemHealth8", 1],
        ["increaseSystemHealth3", 1],
        ["reducePoints5", 1],
        ["increaseSystemHealth6", 1],
        ["increaseResources2", 1],
        ["increaseSystemHealth4", 1],
        ["reducePoints10", 1],
      ],
      deckset: _prolificEvents,
    },
  };

  const eventConfig = availableEventCards[gameType];
  const availableEvents: Array<EventDeckItem> = [];
  eventConfig.availableEvents.map(([event, numberOfCopies]) => {
    const marsEventData = _.find(eventConfig.deckset, (ev: EventCardData) => ev.codeName === event);
    if (marsEventData) {
      availableEvents.push(_.cloneDeep({ event: marsEventData, numberOfCopies: numberOfCopies }));
    } else {
      logger.warn("No event ID found in mars events: %s", event);
    }
  });
  return availableEvents;
}
